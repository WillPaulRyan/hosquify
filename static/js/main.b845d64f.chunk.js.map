{"version":3,"sources":["components/Form.js","components/Card.js","components/Track.js","App.js","serviceWorker.js","index.js"],"names":["Form","handleKeyPress","event","which","keyCode","props","search","id","type","placeholder","autoComplete","onChange","this","handleChange","bind","onKeyPress","value","searchValue","React","Component","App","millis","minutes","Math","floor","seconds","toFixed","className","onClick","handleClick","style","backgroundImage","data","artworkUrl100","millisToMinutesAndSeconds","trackTimeMillis","trackName","artistName","collectionName","releaseDate","substring","primaryGenreName","trackPrice","Track","handleKeyPressBack","handleBack","src","alt","audioControls","href","target","rel","state","resultsLoaded","trackView","trackSelected","currentSong","sortParam","button","audio","document","getElementById","song","results","previewUrl","setState","playPromise","play","undefined","then","catch","error","current","resultCount","pause","handleSelect","index","sortData","reverse","sort","a","b","localeCompare","fetch","encodeURIComponent","res","json","err","console","sortLength","sortGenre","sortPrice","map","result","key","listId","crossOrigin","preload","autoPlay","reset","handleKeyPressAudio","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b845d64f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Form.css';\r\n\r\nexport default class Form extends React.Component {\r\n  handleKeyPress = (event) => {\r\n    // Called when pressing 'enter' in search bar\r\n    if(event.which === 13 || event.keyCode === 13) {\r\n      this.props.search();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <input id=\"search\" type=\"text\" \r\n          placeholder=\"Search...\" autoComplete=\"off\"\r\n          onChange={this.props.handleChange.bind(this)}\r\n          onKeyPress={this.handleKeyPress}\r\n          value={this.props.searchValue}\r\n        />\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './Card.css'\r\n\r\nexport default class App extends React.Component {\r\n\r\n  millisToMinutesAndSeconds(millis) {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n  }\r\n  \r\n  render() {    \r\n    return(\r\n      <button className=\"card\" onClick={this.props.handleClick} >\r\n        <div className=\"thumb-container\" style={{backgroundImage: `url(${this.props.data.artworkUrl100})`}}>\r\n          <span className=\"length\">{this.millisToMinutesAndSeconds(this.props.data.trackTimeMillis)}</span>\r\n        </div>\r\n        <div className=\"info\">\r\n          <div className=\"primary\">\r\n            <h3 className=\"title\">{this.props.data.trackName}</h3>\r\n            <h3 className=\"artist\">{this.props.data.artistName}</h3>\r\n          </div>\r\n          <h4 className=\"album\">{this.props.data.collectionName}</h4>\r\n          <h4 className=\"year\">{this.props.data.releaseDate.substring(0,4)} - {this.props.data.primaryGenreName}</h4>\r\n          {this.props.data.trackPrice > 0\r\n          ? <h4 className=\"price\">${this.props.data.trackPrice}</h4>\r\n          : <h4 className=\"price\">Unavailable</h4>}\r\n        </div>\r\n      </button>\r\n    )\r\n  }\r\n\r\n}","import React from 'react';\r\nimport './Track.css';\r\n\r\nexport default class Track extends React.Component {\r\n\r\n  handleKeyPressBack = (event) => {\r\n    if(event.which === 13 || event.keyCode === 13) {\r\n      this.props.handleBack();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <section id=\"track-view\">\r\n        <button id=\"back\" onClick={this.props.handleBack}></button>\r\n        <div id=\"track-container\">\r\n          <div id=\"track-info\">\r\n            <img id=\"cover\" src={this.props.data.artworkUrl100} alt=\"Album Cover\" />\r\n            <div id=\"primary\">\r\n              <h1 id=\"title\">{this.props.data.trackName}</h1>\r\n              <h2 id=\"artist\">{this.props.data.artistName}</h2>\r\n            </div>\r\n            <h2 id=\"album\">{this.props.data.collectionName}</h2>\r\n            <h2 id=\"year\">{this.props.data.releaseDate.substring(0,4)} - {this.props.data.primaryGenreName}</h2>\r\n          </div>\r\n          <div id=\"track-controls\">\r\n            <button id=\"previous\" onClick={this.props.audioControls.bind(this)}></button>\r\n            <button id=\"play\" onClick={this.props.audioControls.bind(this)}></button>\r\n            <button id=\"pause\" onClick={this.props.audioControls.bind(this)}></button>\r\n            <button id=\"next\" onClick={this.props.audioControls.bind(this)}></button>\r\n          </div>\r\n          <div id=\"share\">\r\n            {/* Facebook (url) */}\r\n            <a href={`https://www.facebook.com/sharer/sharer.php?u=willpaulryan.github.io/hosquify`}\r\n                className=\"share-btn facebook\"\r\n                target=\"_blank\" rel=\"noopener noreferrer\" >              \r\n              Facebook\r\n            </a>\r\n\r\n            {/* Twitter (url, text, @mention) */}\r\n            <a href={`https://twitter.com/share?url=willpaulryan.github.io/hosquify&text=Listening%20to%20${this.props.data.artistName}%20%2D%20${this.props.data.trackName}%20on%20Hosquify!`} \r\n                className=\"share-btn twitter\"\r\n                target=\"_blank\" rel=\"noopener noreferrer\" >\r\n              Twitter\r\n            </a>\r\n            {/* LinkedIn (url, title, summary, source url) */}\r\n            <a href={`https://www.linkedin.com/shareArticle?url=willpaulryan.github.io/hosquify&title=Hosquify&summary=Listening%20to%20${this.props.data.artistName}%20%2D%20${this.props.data.trackName}%20on%20Hosquify!&source=willpaulryan.github.io/hosquify`}\r\n                className=\"share-btn linkedin\"\r\n                target=\"_blank\" rel=\"noopener noreferrer\" >\r\n              LinkedIn\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport Form from './components/Form'\nimport Card from './components/Card'\nimport Track from './components/Track'\nimport './App.css';\n\nexport default class App extends React.Component {\n  state = {\n    searchValue: '',\n    data: {},\n    resultsLoaded: false,\n    trackView: false,\n    trackSelected: 0,\n    currentSong: '',\n    sortParam: '',\n  }\n\n  audioControls = (event) => {\n    let button = event.target.id\n    // console.log(button)\n    const audio = document.getElementById(\"audio\");\n    \n    if (button === \"play\") {\n      let song = this.state.data.results[this.state.trackSelected].previewUrl; \n      this.setState({\n        currentSong: song,\n      })\n        \n      // Promise that song will play, after it loads\n      var playPromise = audio.play();\n      if (playPromise !== undefined) {\n        playPromise.then()\n        // Throws an error on the first song of every session, \n        // but it's okay, so we don't log it\n        .catch(error => {});\n      }\n    \n    } else if (button === \"previous\") {\n      let current = this.state.trackSelected;\n      if (current) {\n        this.setState({trackSelected: current - 1})\n      } // else do nothing, because current == 0 and cannot be decreased\n\n    } else if (button === \"next\") {\n      let current = this.state.trackSelected;\n      if (current < this.state.data.resultCount - 1) {\n        this.setState({trackSelected: current + 1})\n      } // else do nothing, because current is last song and cannot be increased \n    } else if (button === \"pause\") {audio.pause()}\n  }\n\n  handleBack = () => {\n    // Called when hitting '<-' in track view\n    this.setState({trackView: false})\n  }\n\n  handleChange = (event) => {\n    // Called when typing in search bar\n    this.setState({searchValue: event.target.value})\n  }\n    \n  handleSelect = (index) => {\n    // What track are we looking at?\n    this.setState({trackView: true, trackSelected: index})\n    // console.log(this.state.data.results[index]); // For testing API response\n  }\n\n  async search() {\n    // Reset and fetch\n    this.setState({resultsLoaded: false, trackView: false, resultCount: 0})\n    await fetch(`https://itunes.apple.com/search?term=${encodeURIComponent(this.state.searchValue)}&media=music`)\n      .then(res => {return res.json()})\n      .then(data => {\n        this.setState({\n          data,\n          resultsLoaded: true,\n          sortParam: '',\n        })\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({resultsLoaded: true, data: {}})\n      });\n  }\n  \n  sortData = (event) => {\n    let data = this.state.data;\n\n    if (event.target.id === 'length') {\n      if (this.state.sortParam === 'length') {\n        // Reverse if already sorted by length\n        data.results.reverse();\n      } else {\n        // Sort ascending\n        data.results.sort((a, b) => {\n          return a.trackTimeMillis - b.trackTimeMillis\n        })\n      }\n      this.setState({data, sortParam: 'length'})\n\n    } else if (event.target.id === \"genre\") {\n      if (this.state.sortParam === 'genre') {\n        // Reverse if already sorted by genre\n        data.results.reverse();\n      } else {\n        // Sort desending\n        data.results.sort((a, b) => {\n          return a.primaryGenreName.localeCompare(b.primaryGenreName)\n        })\n      }\n      this.setState({data, sortParam: 'genre'})\n\n    } else if (event.target.id === \"price\") {\n      if (this.state.sortParam === 'price') {\n        // Reverse if already sorted by price\n        data.results.reverse();\n      } else {\n        // Sort ascending\n        data.results.sort((a, b) => {\n          return a.trackPrice - b.trackPrice\n        })\n      }\n      this.setState({data, sortParam: 'price'})\n    }\n  }\n\n  reset() {\n    this.setState({\n      searchValue: '',\n      data: {},\n      resultsLoaded: false,\n      trackView: false,\n      sortLength: false,\n      sortGenre: false,\n      sortPrice: false,  \n    })\n    \n  }\n\n  render() {\n    let results;\n    // Array.map() data from API\n    if (this.state.resultsLoaded) {\n      if (!this.state.data.resultCount) {\n        results = <h2 id=\"no-results\">No results</h2>\n      } else {\n        results = this.state.data.results.map((result, index) => {\n          return(<Card data={result} key={index} listId={index} handleClick={this.handleSelect.bind(null, index)} />)\n        })\n      }\n    }\n\n    return (\n      <div id=\"app\">\n        {/* Hidden audio player */}\n        <audio id=\"audio\" src={this.state.currentSong} \n          crossOrigin=\"anonymous\" preload=\"true\" autoPlay />\n        \n        <section id=\"search-container\">\n          <button id=\"logo\" onClick={this.reset.bind(this)}></button>\n          <Form \n            handleChange={this.handleChange}\n            handleKeyPress={this.handleKeyPress}\n            searchValue={this.state.searchValue}\n            search={this.search.bind(this)}\n          />\n        </section>\n\n        {/* Either display track view or search view */}\n        {this.state.trackView\n          ? <Track\n              data={this.state.data.results[this.state.trackSelected]}\n              handleBack={this.handleBack}\n              audioControls={this.audioControls}\n              handleKeyPressAudio={this.handleKeyPressAudio}\n            />\n          : <section id=\"results-container\">\n              {/* If we have results, display them */}\n              {this.state.resultsLoaded \n                ? <div id=\"sort-results\" >\n                    {this.state.data.resultCount\n                      ? <div id=\"sort-container\">\n                          {/* This could be its own separate component... */}\n                          <h3 id=\"sort-label\">Sort by...</h3>\n                          <div id=\"sort-capsule\">\n                            <button id=\"length\" className={this.state.sortParam === 'length' ? 'active' : ''} onClick={this.sortData.bind(this)}>Length</button>\n                            <button id=\"genre\" className={this.state.sortParam === 'genre' ? 'active' : ''} onClick={this.sortData.bind(this)}>Genre</button>\n                            <button id=\"price\" className={this.state.sortParam === 'price' ? 'active' : ''} onClick={this.sortData.bind(this)}>Price</button>\n                          </div>\n                        </div>\n                      : ''\n                    }\n                    <div id=\"results\">{results}</div>\n                  </div>\n                : ''}\n            </section>\n        }\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}